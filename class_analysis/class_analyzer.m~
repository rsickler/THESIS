% COMPARES VARIOUS CLASSIFIER ACCURACIES ACROSS ALL 3 MASKS

%load in accuracies
go_go_MI = [0.79	0.68	0.56	0.70]; 
go_go_SM = [0.61	0.59	0.38	0.59];
go_go_AM = [0.51	0.38	0.33	0.39];
mean_go_go_MI = mean(go_go_MI);
mean_go_go_SM = mean(go_go_SM);
mean_go_go_AM = mean(go_go_AM); 
stderror_go_go_MI = std(go_go_MI) / sqrt(length(go_go_MI));
stderror_go_go_SM = std(go_go_SM) / sqrt(length(go_go_SM));
stderror_go_go_AM = std(go_go_AM) / sqrt(length(go_go_AM));

imag_imag_MI = [0.47	0.43	0.44	0.41]; 
imag_imag_SM = [0.40	0.34	0.48	0.35];
imag_imag_AM = [0.26	0.35	0.29	0.38];
mean_imag_imag_MI = mean(imag_imag_MI);
mean_imag_imag_SM = mean(imag_imag_SM);
mean_imag_imag_AM = mean(imag_imag_AM); 
stderror_imag_imag_MI = std(imag_imag_MI) / sqrt(length(imag_imag_MI));
stderror_imag_imag_SM = std(imag_imag_SM) / sqrt(length(imag_imag_SM));
stderror_imag_imag_AM = std(imag_imag_AM) / sqrt(length(imag_imag_AM));

go_imag_MI = [0.36	0.35	0.32	0.32]; 
go_imag_SM = [0.33	0.31	0.32	0.35];
go_imag_AM = [0.38	0.22	0.32	0.30];
mean_go_imag_MI = mean(go_imag_MI);
mean_go_imag_SM = mean(go_imag_SM);
mean_go_imag_AM = mean(go_imag_AM); 
stderror_go_imag_MI = std(go_imag_MI) / sqrt(length(go_imag_MI));
stderror_go_imag_SM = std(go_imag_SM) / sqrt(length(go_imag_SM));
stderror_go_imag_AM = std(go_imag_AM) / sqrt(length(go_imag_AM));

imag_go_MI = [0.42	0.44	0.30	0.29]; 
imag_go_SM = [0.32	0.34	0.38	0.24];
imag_go_AM = [0.29	0.26	0.38	0.27];
mean_imag_go_MI = meanimag_go_MIgo_go_MI);
mean_go_go_SM = mean(go_go_SM);
mean_go_go_AM = mean(go_go_AM); 
stderror_go_go_MI = std(go_go_MI) / sqrt(length(go_go_MI));
stderror_go_go_SM = std(go_go_SM) / sqrt(length(go_go_SM));
stderror_go_go_AM = std(go_go_AM) / sqrt(length(go_go_AM));



% Data to be plotted as a bar graph
p2_means = 100*[p1_t_O_RATIO p1_i_O_RATIO p1_d_O_RATIO; ...
                p2_t_O_RATIO p2_i_O_RATIO p2_d_O_RATIO; ...
                p3_t_O_RATIO 0 0; ...
                p4_t_O_RATIO p4_i_O_RATIO p4_d_O_RATIO];
        
p2_stds = 100*[p1_t_O_RATIO_STD p1_i_O_RATIO_STD p1_d_O_RATIO_STD; ...
               p2_t_O_RATIO_STD p2_i_O_RATIO_STD p2_d_O_RATIO_STD; ...
               p3_t_O_RATIO_STD 0  0; ...
               p4_t_O_RATIO_STD p4_i_O_RATIO_STD p4_d_O_RATIO_STD];

% Creating axes and the bar graph
ax = axes;
h = bar(p2_means,'BarWidth',1);
xt={'P1' ; 'P2' ; 'P3' ; 'P4'}; 
set(gca,'xtick',1:4); 
set(gca,'xticklabel',xt);
ylim([0 100]);

% Set color for each bar face
h(1).FaceColor = 'green';
h(2).FaceColor = 'blue';
h(3).FaceColor = 'red';

% Properties of the bar graph as required
ax.YGrid = 'on';
ax.GridLineStyle = '-';

% X and Y labels
xlabel('Experimental Phase');
ylabel('Mean Percent Accuracy (Originals)');

% Creating a legend and placing it outside the bar plot
lg = legend('Continued Training','Mental Practice', 'Irrelevant Task', 'AutoUpdate','off');
lg.Location = 'BestOutside';
lg.Orientation = 'Horizontal';

hold on;

% Finding the number of groups and the number of bars in each group
ngroups = size(p2_means, 1);
nbars = size(p2_means, 2);

% Calculating the width for each bar group
groupwidth = min(0.8, nbars/(nbars + 1.5));

% Set the position of each error bar in the centre of the main bar
for i = 1:nbars
    % Calculate center of each bar
    x = (1:ngroups) - groupwidth/2 + (2*i-1) * groupwidth / (2*nbars);
    errorbar(x, p2_means(:,i), p2_stds(:,i), 'k', 'linestyle', 'none');
end
